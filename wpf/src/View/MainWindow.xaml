<Window x:Class="Salmon.Vault.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Salmon.Vault.View"
        xmlns:viewmodel="clr-namespace:Salmon.Vault.ViewModel"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Salmon Vault" Height="450" Width="860"
        Background="{StaticResource SalmonBackground}">
    <Window.DataContext>
        <viewmodel:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.REFRESH}" Key="R" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.BACK}" Key="Backspace"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.OPEN_VAULT}" Key="O" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.CREATE_VAULT}" Key="N" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.CLOSE_VAULT}" Key="L" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.IMPORT}" Key="I" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.EXPORT}" Key="E" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.EXPORT_AND_DELETE}" Key="U" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.COPY}" Key="C" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.CUT}" Key="X" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.PASTE}" Key="V" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}"
                    CommandParameter="{x:Static viewmodel:ActionType.SEARCH}" Key="F" Modifiers="Ctrl"  />
        <KeyBinding Command="{Binding ClickCommand}" 
                    CommandParameter="{x:Static viewmodel:ActionType.DELETE}" Key="Delete" />
    </Window.InputBindings>

    <Grid Background="{StaticResource SalmonBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Background="{StaticResource SalmonBackground}">
            <Menu DockPanel.Dock="Top" x:Name="MainMenu" Background="{StaticResource SalmonBackground}" IsTabStop="True">
                <MenuItem Header="File">
                    <MenuItem Header="Open Vault" InputGestureText="Ctrl+O"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.OPEN_VAULT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/open_vault_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="New Vault" InputGestureText="Ctrl+N"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.CREATE_VAULT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/add_vault_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Close Vault" InputGestureText="Ctrl+L"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.CLOSE_VAULT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/close_vault_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Import Auth File"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.IMPORT_AUTH}">
                    <MenuItem.Icon>
                        <Image Source="/Icons/auth_import_small.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Export Auth File"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.EXPORT_AUTH}">
                <MenuItem.Icon>
                    <Image Source="/Icons/auth_export_small.png"/>
                </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Revoke Auth"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.REVOKE_AUTH}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/auth_revoke_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                <MenuItem Header="Display Auth ID"
                              Command="{Binding ClickCommand}"
                       CommandParameter="{x:Static viewmodel:ActionType.DISPLAY_AUTH_ID}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/auth_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                <Separator/>
                <MenuItem Header="Settings" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.SETTINGS}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/settings_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                <Separator/>
                <MenuItem Header="Exit" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXIT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/exit_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Edit">
                    <MenuItem Header="New Folder" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.NEW_FOLDER}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/add_folder_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Copy " InputGestureText="Ctrl+C" 
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.COPY}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/copy_file_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Cut" InputGestureText="Ctrl+X"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.CUT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/move_file_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Paste" InputGestureText="Ctrl+P"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.PASTE}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/file_paste_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.DELETE}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/delete_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Operations">
                    <MenuItem Header="Import Files"  InputGestureText="Ctrl+I"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.IMPORT_FILES}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/import_file_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Import Folder"  InputGestureText="Ctrl+I"
                        Command="{Binding ClickCommand}"
                            CommandParameter="{x:Static viewmodel:ActionType.IMPORT_FOLDER}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/import_folder_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Export"  InputGestureText="Ctrl+E"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXPORT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/export_file_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Export And Delete"  InputGestureText="Ctrl+U"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.EXPORT_AND_DELETE}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/export_and_delete_file_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Search"  InputGestureText="Ctrl+F"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.SEARCH}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/search_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Refresh" InputGestureText="Ctrl+R"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.REFRESH}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/refresh_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Back" InputGestureText="Backspace"
                              Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.BACK}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/back_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Stop" Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.STOP}"
                              Visibility="{Binding Path=StopVisibility, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/cancel_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Help">
                    <MenuItem Header="About" Command="{Binding ClickCommand}"
                              CommandParameter="{x:Static viewmodel:ActionType.ABOUT}">
                        <MenuItem.Icon>
                            <Image Source="/Icons/info_small.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </DockPanel>
        <Grid HorizontalAlignment="Stretch" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" HorizontalAlignment="Left" IsTabStop="True"
                    Command="{Binding ClickCommand}" VerticalAlignment="Center"
                    CommandParameter="{x:Static viewmodel:ActionType.BACK}">
                <Image Source="/Icons/up_small.png" Margin="4" Width="16" Height="16"/>
            </Button>
            <TextBox Grid.Column="1" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" 
                     Text="{Binding Path=Path, Mode=OneWay}" IsReadOnly="True" VerticalAlignment="Stretch" Background="Black"
                     IsTabStop="True"/>
            <Button Grid.Column="2" HorizontalAlignment="Right" IsTabStop="True"
                    Command="{Binding ClickCommand}" VerticalAlignment="Center"
                    CommandParameter="{x:Static viewmodel:ActionType.REFRESH}">
                <Image Source="/Icons/refresh_small.png" Margin="4" Width="16" Height="16"/>
            </Button>
        </Grid>
        <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <DataGrid x:Name="DataGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  ItemsSource="{Binding FileItemList}" AutoGenerateColumns="False" GridLinesVisibility="None" TabIndex="0"
                      VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                      SelectedItem="{Binding SelectedItem}"
                      SelectionChanged="DataGrid_SelectionChanged"
                      MouseDoubleClick="DataGrid_MouseDoubleClick"
                      PreviewKeyDown="DataGrid_PreviewKeyDown"
                      >
                <DataGrid.InputBindings>
                    <KeyBinding Key="C" Modifiers="Control" Command="ApplicationCommands.NotACommand" />
                    <KeyBinding Key="X" Modifiers="Control" Command="ApplicationCommands.NotACommand" />
                    <KeyBinding Key="V" Modifiers="Control" Command="ApplicationCommands.NotACommand" />
                    <KeyBinding Key="F" Modifiers="Control" Command="ApplicationCommands.NotACommand" />
                    <KeyBinding Key="Delete" Command="ApplicationCommands.NotACommand" />
                </DataGrid.InputBindings>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="View" Click="MenuItem_View" >
                            <MenuItem.Icon>
                                <Image Source="/Icons/file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="View As Text" Click="MenuItem_ViewAsText" >
                            <MenuItem.Icon>
                                <Image Source="/Icons/text_file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Copy" Click="MenuItem_Copy" InputGestureText="Ctrl-C">
                            <MenuItem.Icon>
                                <Image Source="/Icons/copy_file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Cut" Click="MenuItem_Cut" InputGestureText="Ctrl-X">
                            <MenuItem.Icon>
                                <Image Source="/Icons/move_file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Delete" Click="MenuItem_Delete" >
                            <MenuItem.Icon>
                                <Image Source="/Icons/delete_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Rename" Click="MenuItem_Rename" >
                            <MenuItem.Icon>
                                <Image Source="/Icons/rename_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Export" Click="MenuItem_Export" InputGestureText="Ctrl-E">
                            <MenuItem.Icon>
                                <Image Source="/Icons/export_file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Export And Delete" Click="MenuItem_ExportAndDelete" InputGestureText="Ctrl-U">
                            <MenuItem.Icon>
                                <Image Source="/Icons/export_and_delete_file_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Properties" Click="MenuItem_Properties" >
                            <MenuItem.Icon>
                                <Image Source="/Icons/info_small.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="" Width="64" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Width="42" Height="42" Margin="2">
                                    <Image Source="{Binding Image, Mode=OneWay, IsAsync=True}" Width="42" Height="42"/>
                                    <Rectangle Width="42" Height="42" Opacity="0.5">
                                        <Rectangle.Fill>
                                            <SolidColorBrush Color="{Binding TintColor, Mode=OneWay}"/>
                                        </Rectangle.Fill>
                                        <Rectangle.OpacityMask>
                                            <ImageBrush ImageSource="{Binding Image, Mode=OneWay}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    <TextBlock Text="{Binding Ext, Mode=OneWay}" FontWeight="Bold" Foreground="Black" Background="Transparent" 
                                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}" Header="Name" IsReadOnly="True" Width="300">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Date, Mode=OneWay}" Header="Date Modified" IsReadOnly="True" Width="200">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Type, Mode=OneWay}" Header="Type" IsReadOnly="True" Width="60">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding SizeText, Mode=OneWay}" Header="Size" IsReadOnly="True" Width="60">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Path, Mode=OneWay}" Header="Path" IsReadOnly="True" Width="200" Visibility="Collapsed">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid HorizontalAlignment="Stretch" Grid.Row="3" Background="{StaticResource SalmonBackground}"
              Visibility="{Binding Path=ProgressVisibility, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" d:Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"
				           FontWeight="Bold" FontSize="12">
							<Run d:Text="50" Text="{Binding Path=FileProgress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                        <Run Text="%"/>
                    </TextBlock>
                    <ProgressBar Grid.Row="1" Minimum="0" Maximum="100" d:Value="50" Value="{Binding Path=FileProgress, Mode=OneWay}" 
                                        Width="60" BorderThickness="1"
                                            Background="#31313F" Foreground="DarkSlateGray"/>

                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center"
				           FontWeight="Bold" FontSize="12">
							<Run d:Text="50" Text="{Binding FilesProgress, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                        <Run Text="%"/>
                    </TextBlock>
                    <ProgressBar Grid.Row="1" Minimum="0" Maximum="100" d:Value="50" Value="{Binding FilesProgress, Mode=OneWay}" 
                                        Width="60" BorderThickness="1" 
                                            Background="#31313F" Foreground="DarkSlateGray"/>
                </Grid>
            </StackPanel>
        </Grid>
        <StackPanel HorizontalAlignment="Stretch" Grid.Row="4" Background="{StaticResource SalmonBackground}">
            <Label Grid.Column="0" HorizontalAlignment="Right" Content="{Binding Status, Mode=OneWay}" VerticalAlignment="Stretch"/>
        </StackPanel>
    </Grid>
</Window>
